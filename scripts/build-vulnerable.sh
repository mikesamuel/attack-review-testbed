#!/bin/bash

# Builds a variant of the target server but with protective measures disabled.

set -e

# This needs to match the same lines in gen-vulnerable-patch.sh
source_files="$(
    git check-ignore -n -v --no-index \
        $( find lib -type f | grep -v lib/framework;
           echo package.json main.js scripts/run-locally.js static/* ) \
    | perl -ne 'print "$1\n" if m/^::\t(.*)/' | sort
)"
hash_from="$(
    shasum -ba 1 vulnerable.patch $source_files
)"


force=
check=
while (( $# > 0 )); do
    case "$1" in
        -f) force=1; shift ;;
        -c) check=1; shift ;;
    esac
done

if [ -n "$check" ]; then
    if [ -f "vulnerable/patch-base.sha1" ] && [[ "$hash_from" != "$( cat vulnerable/patch-base.sha1 )" ]]; then
        echo \
"Vulnerable server needs repatching.
If you tweaked the vulnerable server regenerate vulnerable.patch:
  ./scripts/gen-vulnerable-patch.sh
else if you changed the target server, regenerate the vulnerable server thus:
  mv vulnerable vulnerable.bak
  ./build-vulnerable.sh
"
        exit 1
    fi
    if [ -d vulnerable ]; then
        exit 0
    fi
fi

if [ -d vulnerable/ ]; then
    if [ -z "$force" ]; then
        echo "vulnerable/ directory already exists.  Specify -f to force overwrite."
        exit 1
    fi
    rm -rf vulnerable/
fi

echo Deleting old vulnerable/
rm -rf vulnerable/

echo Copying files over
for f in $source_files; do

    mkdir -p vulnerable/"$(dirname "$f")"
    cp -r "$f" vulnerable/"$f"
done

rm -rf vulnerable/static/user-uploads

echo Copying node_modules
cp -r node_modules/ vulnerable/node_modules/

echo Patching
pushd vulnerable/ >& /dev/null
echo "#/bin/bash" > scripts/postinstall.sh

for f in node_modules/{module-keys,node-sec-patterns,safesql,sh-template-tag,web-contract-types}/index.js \
         node_modules/sh-template-tag/lib/tag.js node_modules/safesql/lib/id.js; do
    echo 'throw new Error(`'"$f"'! kapow!`);' > "$f"
done

echo \
'// The vulnerable target server is generated by a patch, so allow things like
// commented out code and replacement of safesql.pg`...` with `...`
module.exports = {
  "rules": {
    "line-comment-position": 0,
    "no-inline-comments": 0,
    "no-unreachable": 0,
    "padded-blocks": 0,
    "spaced-comment": 0,
    "quotes": 0
  }
};
' > vulnerable/.eslintrc.js

chmod +x scripts/postinstall.sh
patch -p0 < ../vulnerable.patch
popd >& /dev/null

echo -n "$hash_from" > vulnerable/patch-base.sha1
